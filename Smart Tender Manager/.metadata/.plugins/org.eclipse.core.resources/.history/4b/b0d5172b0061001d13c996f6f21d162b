package Tender.daoImpl;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.mysql.cj.xdevapi.Result;

import Tender.Exception.AdminException;
import Tender.Exception.VenderException;
import Tender.Model.Tender;
import Tender.Model.Vender;
import Tender.dao.adminDao;
import Tender.utility.Dao;

public class adminDaoImpl implements adminDao{

	@Override
	public String loginIntoAdmin(String AUsername, String APassword) throws AdminException{
		
		// Admin is hardcoded  if correct username and password is present then message is login
		String message = "Not Login";
		
		if(AUsername == "sachin" && APassword == "sachin7410") {
			message = "Login";
		}
		return message ;
	}

	@Override
	public String registerVender(Vender vender) throws AdminException{
		//if user is adimn then it will allow 
		
		String result = "vender not registered";
		
		try(Connection conn = Dao.provideConnection()){
		PreparedStatement   ps = conn.prepareStatement("insert into vender values (?,?,?,?)");
		
		ps.setInt(1, vender.getVid());
		ps.setString(2, vender.getVname());
		ps.setString(3, vender.getUsername());
		ps.setString(4, vender.getPassword());
		
			int x = ps.executeUpdate();
			if (x > 0 ) {
				result = "verder register Succesfully ";
			}
			
			
			
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			throw new AdminException(e.getMessage());
			
		}
		
		
	
		
		
		
		
		
		return result;
		
		
		
	}

	@Override
	public List<Vender> getAllVender() throws VenderException {
		 List<Vender> venders = new ArrayList<>();
			try(Connection conn = Dao.provideConnection()){
				
				PreparedStatement ps = conn.prepareStatement("select * from vender" );
				
				ResultSet rs = ps.executeQuery();
				
				while(rs.next()) {
					int Vid = rs.getInt("VId");
					String Vname = rs.getString("VName");
					String VUsername = rs.getString("VUsername");
					String VPassword = rs.getString("VUsername");
					
					Vender vender = new Vender ();
					vender.setVid(Vid);
					vender.setVname(Vname);
					vender.setUsername(VUsername);
					vender.setPassword(VPassword);
					
					venders.add(vender);
					
					
				}
				
//				
//				for (Vender vender : venders) {
//					System.out.println(vender);
//				}
//				
				
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		
				
			}
			
			
			
			return venders;
		
	
	}
	

	@Override
	public String CreateNewTender(int TenderId ,String TenderName){
	
		String message = "Not Inserted ...";
		try (Connection conn = Dao.provideConnection()) {
			
			PreparedStatement  ps = conn.prepareStatement("insert into tender values(?,?)");
			ps.setInt(1,TenderId);
			ps.setString(2,TenderName);
		int x= 	ps.executeUpdate();
		if (x> 0) {
		 message = "Tender Inserted  Successfully";
		}
			
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		
		
		return message;
	}

	@Override
	public List<Tender> getAllTender() {
		 List<Vender> Tenders = new ArrayList<>();
			try(Connection conn = Dao.provideConnection()){
				
				PreparedStatement ps = conn.prepareStatement("select * from tender" );
				
				ResultSet rs = ps.executeQuery();
				
				while(rs.next()) {
					int Tid = rs.getInt("VId");
					String Tname = rs.getString("VName");
					
					
					Tender Tend = new Tender ();
					Tend.setTenderId(Tid);
					Tend.setTenderName(Tname);
					
					
					Tenders.add(Tend);
					
					
				}
				
//				
//				for (Vender vender : venders) {
//					System.out.println(vender);
//				}
//				
				
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		
				
			}
			
			
			
			return Tenders;
		
	
	} 



}